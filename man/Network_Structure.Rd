% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NetworkStructure.R
\name{Network_Structure}
\alias{Network_Structure}
\title{R6 class representing Network_Structure}
\description{
Creates a Network_Structure object
}
\details{
Specifies the structure of the network
}
\section{Super class}{
\code{\link[ModelPath:Serializable]{ModelPath::Serializable}} -> \code{Network_Structure}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{rankdir}}{Get or set the network direction. Either "LR" or "UD"}

\item{\code{node_sequence}}{Get or set the node sequence}

\item{\code{graph}}{Get the graph object}

\item{\code{edges}}{Get or set the Dictionary of edges}

\item{\code{path}}{Get the paths}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Network_Structure$new()}}
\item \href{#method-restore_edge}{\code{Network_Structure$restore_edge()}}
\item \href{#method-remove_edge}{\code{Network_Structure$remove_edge()}}
\item \href{#method-build}{\code{Network_Structure$build()}}
\item \href{#method-build_graph}{\code{Network_Structure$build_graph()}}
\item \href{#method-clone}{\code{Network_Structure$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="serialize">}\href{../../ModelPath/html/Serializable.html#method-serialize}{\code{ModelPath::Serializable$serialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="unserialize">}\href{../../ModelPath/html/Serializable.html#method-unserialize}{\code{ModelPath::Serializable$unserialize()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a Network_Structure object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$new(rankdir = "LR", default = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rankdir}}{The direction of the visNetwork. Either "LR" (left-right) or "UD" (up-down). Default is LR.}

\item{\code{default}}{Logical. If TRUE, then no data fields are initialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Network_Structure object
restore edge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-restore_edge"></a>}}
\if{latex}{\out{\hypertarget{method-restore_edge}{}}}
\subsection{Method \code{restore_edge()}}{
Restore an edge that has been temporarily removed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$restore_edge(representation)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{representation}}{An edge representation
remove_edge}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-remove_edge"></a>}}
\if{latex}{\out{\hypertarget{method-remove_edge}{}}}
\subsection{Method \code{remove_edge()}}{
Remove an edge from the structure
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$remove_edge(representation, permanent = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{representation}}{An edge representation}

\item{\code{permanent}}{Logical. Whether the edge is removed permanently.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build"></a>}}
\if{latex}{\out{\hypertarget{method-build}{}}}
\subsection{Method \code{build()}}{
Build the configuration of the network for display
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$build(network_nodes)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{network_nodes}}{A vector of Node objects.
build_graph}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build_graph"></a>}}
\if{latex}{\out{\hypertarget{method-build_graph}{}}}
\subsection{Method \code{build_graph()}}{
Build the graph display
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$build_graph(network_nodes)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{network_nodes}}{A vector of Node objects in the network}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Structure$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
