% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Set.R
\name{Set}
\alias{Set}
\title{Set}
\description{
A Set stores a set of objects of the same type.
}
\details{
A set is similar to a vector, except that all objects must be unique.
}
\section{Super class}{
\code{\link[ModelPath:Serializable]{ModelPath::Serializable}} -> \code{Set}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{size}}{Setter for size}

\item{\code{items}}{Getter and Setter for the items in the set.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Set-new}{\code{Set$new()}}
\item \href{#method-Set-add}{\code{Set$add()}}
\item \href{#method-Set-get}{\code{Set$get()}}
\item \href{#method-Set-remove}{\code{Set$remove()}}
\item \href{#method-Set-remove_at}{\code{Set$remove_at()}}
\item \href{#method-Set-contains}{\code{Set$contains()}}
\item \href{#method-Set-clear}{\code{Set$clear()}}
\item \href{#method-Set-is_empty}{\code{Set$is_empty()}}
\item \href{#method-Set-clone}{\code{Set$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="serialize"><a href='../../ModelPath/html/Serializable.html#method-Serializable-serialize'><code>ModelPath::Serializable$serialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="unserialize"><a href='../../ModelPath/html/Serializable.html#method-Serializable-unserialize'><code>ModelPath::Serializable$unserialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-new"></a>}}
\if{latex}{\out{\hypertarget{method-Set-new}{}}}
\subsection{Method \code{new()}}{
Creates a new Set
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$new(..., check_value_fn = NULL, default = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Objects}

\item{\code{check_value_fn}}{A function that checks whether the object satisfies certain specified conditions}

\item{\code{default}}{Logical. If TRUE, then no data fields are initialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Set object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-add"></a>}}
\if{latex}{\out{\hypertarget{method-Set-add}{}}}
\subsection{Method \code{add()}}{
Add a new object into the Set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$add(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{An Object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-get"></a>}}
\if{latex}{\out{\hypertarget{method-Set-get}{}}}
\subsection{Method \code{get()}}{
Get an object based on the index
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$get(idx)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idx}}{Integer. The index of the set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-remove"></a>}}
\if{latex}{\out{\hypertarget{method-Set-remove}{}}}
\subsection{Method \code{remove()}}{
Remove an object from the set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$remove(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{The object to be removed}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-remove_at"></a>}}
\if{latex}{\out{\hypertarget{method-Set-remove_at}{}}}
\subsection{Method \code{remove_at()}}{
Remove an object based upon the index
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$remove_at(idx)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idx}}{Integer. The index which the object is to be removed}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-contains"></a>}}
\if{latex}{\out{\hypertarget{method-Set-contains}{}}}
\subsection{Method \code{contains()}}{
Check if the set contains the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$contains(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{The object to be checked}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-clear"></a>}}
\if{latex}{\out{\hypertarget{method-Set-clear}{}}}
\subsection{Method \code{clear()}}{
Clear all items in the set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$clear()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-is_empty"></a>}}
\if{latex}{\out{\hypertarget{method-Set-is_empty}{}}}
\subsection{Method \code{is_empty()}}{
Check if the set is empty.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$is_empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Set-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Set-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Set$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
