% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Network_Graph.R
\name{Network_Graph}
\alias{Network_Graph}
\title{R6 class representing a network graph}
\description{
A list that stores the information about the appearance of the nodes and edges
in the visnetwork
}
\details{
Specifies the appearance of the network
initialize
}
\section{Super class}{
\code{\link[ModelPath:Serializable]{ModelPath::Serializable}} -> \code{Network_Graph}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{edge_table}}{Get the edge table}

\item{\code{node_table}}{Get the node table
.build_edge_table}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Network_Graph$new()}}
\item \href{#method-get_node}{\code{Network_Graph$get_node()}}
\item \href{#method-set_node_color}{\code{Network_Graph$set_node_color()}}
\item \href{#method-set_node_shape}{\code{Network_Graph$set_node_shape()}}
\item \href{#method-set_node_border}{\code{Network_Graph$set_node_border()}}
\item \href{#method-set_node_label}{\code{Network_Graph$set_node_label()}}
\item \href{#method-is_empty}{\code{Network_Graph$is_empty()}}
\item \href{#method-build_graph}{\code{Network_Graph$build_graph()}}
\item \href{#method-clone}{\code{Network_Graph$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="serialize">}\href{../../ModelPath/html/Serializable.html#method-serialize}{\code{ModelPath::Serializable$serialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ModelPath" data-topic="Serializable" data-id="unserialize">}\href{../../ModelPath/html/Serializable.html#method-unserialize}{\code{ModelPath::Serializable$unserialize()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a graph object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$new(default = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{default}}{Logical. It is not being used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Network_Graph object
get_node
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_node"></a>}}
\if{latex}{\out{\hypertarget{method-get_node}{}}}
\subsection{Method \code{get_node()}}{
Get the node's visnetwork description
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$get_node(node_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{node_id}}{Character the id of the node}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data frame
set_node_color
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_node_color"></a>}}
\if{latex}{\out{\hypertarget{method-set_node_color}{}}}
\subsection{Method \code{set_node_color()}}{
Set the node's color
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$set_node_color(node_id, color)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{node_id}}{Character the id of the node}

\item{\code{color}}{Character the color of the node
set_node_color}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_node_shape"></a>}}
\if{latex}{\out{\hypertarget{method-set_node_shape}{}}}
\subsection{Method \code{set_node_shape()}}{
Set the node's shape
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$set_node_shape(node_id, shape)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{node_id}}{Character the id of the node}

\item{\code{shape}}{Character the shape of the node
set_node_border}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_node_border"></a>}}
\if{latex}{\out{\hypertarget{method-set_node_border}{}}}
\subsection{Method \code{set_node_border()}}{
Set the node's border color
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$set_node_border(node_id, border_color)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{node_id}}{Character the id of the node}

\item{\code{border_color}}{Character the color of the border
set_node_label}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_node_label"></a>}}
\if{latex}{\out{\hypertarget{method-set_node_label}{}}}
\subsection{Method \code{set_node_label()}}{
Set the node's label
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$set_node_label(node_id, label)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{node_id}}{Character the id of the node}

\item{\code{label}}{Character the label of the node
is_empty}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_empty"></a>}}
\if{latex}{\out{\hypertarget{method-is_empty}{}}}
\subsection{Method \code{is_empty()}}{
Check whether the node and edge tables are empty
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$is_empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical
build_graph
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build_graph"></a>}}
\if{latex}{\out{\hypertarget{method-build_graph}{}}}
\subsection{Method \code{build_graph()}}{
Create a node and edge table that describe the graph of the network
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$build_graph(nodes, node_level, edges, path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nodes}}{A Dictionary of Nodes}

\item{\code{node_level}}{The levels where the nodes are placed in the visnetwork}

\item{\code{edges}}{A Dictionary of Edges}

\item{\code{path}}{The data frame that specifies the path}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Network_Graph$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
